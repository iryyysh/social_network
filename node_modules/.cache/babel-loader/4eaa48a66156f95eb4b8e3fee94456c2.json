{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Irina\\\\Desktop\\\\social_network\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport classes from './Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport { addNewMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogReducer';\n\nconst Dialogs = props => {\n  debugger;\n  let state = props.state.getState().dialogPage;\n  let dialogsElements = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id,\n    imgSrc: dialog.imgSrc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 59\n  }, this));\n  let messagesElements = state.messagesData.map(message => /*#__PURE__*/_jsxDEV(Message, {\n    message: message.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 61\n  }, this));\n  let newMessage = state.newMessage;\n  let messageText = /*#__PURE__*/React.createRef();\n\n  let sendMessage = () => {\n    //debugger;\n    props.store.dispatch(addNewMessageActionCreator());\n  };\n\n  let onTextAreaChange = () => {\n    let text = messageText.current.value;\n    props.store.dispatch(updateNewMessageActionCreator(text));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogs_items,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onTextAreaChange,\n        value: props.state.newMessage,\n        ref: messageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["C:/Users/Irina/Desktop/social_network/src/components/Dialogs/Dialogs.jsx"],"names":["classes","NavLink","DialogItem","Message","React","addNewMessageActionCreator","updateNewMessageActionCreator","Dialogs","props","state","getState","dialogPage","dialogsElements","dialogsData","map","dialog","name","id","imgSrc","messagesElements","messagesData","message","newMessage","messageText","createRef","sendMessage","store","dispatch","onTextAreaChange","text","current","value","dialogs","dialogs_items","messages"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,EAAoCC,6BAApC,QAAwE,2BAAxE;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB;AAEA,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,QAAZ,GAAuBC,UAAnC;AAEA,MAAIC,eAAe,GAAGH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsBC,MAAM,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE,EAA1C;AAA8C,IAAA,MAAM,EAAEF,MAAM,CAACG;AAA7D;AAAA;AAAA;AAAA;AAAA,UAAhC,CAAtB;AACA,MAAIC,gBAAgB,GAAGV,KAAK,CAACW,YAAN,CAAmBN,GAAnB,CAAuBO,OAAO,iBAAG,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAO,CAACA;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAjC,CAAvB;AACA,MAAIC,UAAU,GAAGb,KAAK,CAACa,UAAvB;AAEA,MAAIC,WAAW,gBAAGnB,KAAK,CAACoB,SAAN,EAAlB;;AAEA,MAAIC,WAAW,GAAG,MAAM;AACpB;AACAjB,IAAAA,KAAK,CAACkB,KAAN,CAAYC,QAAZ,CAAqBtB,0BAA0B,EAA/C;AACH,GAHD;;AAKA,MAAIuB,gBAAgB,GAAG,MAAM;AACzB,QAAIC,IAAI,GAAGN,WAAW,CAACO,OAAZ,CAAoBC,KAA/B;AACAvB,IAAAA,KAAK,CAACkB,KAAN,CAAYC,QAAZ,CAAqBrB,6BAA6B,CAACuB,IAAD,CAAlD;AACH,GAHD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAACgC,OAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhC,OAAO,CAACiC,aAAxB;AAAA,gBACKrB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACkC,QAAxB;AAAA,gBACKf;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,8BACI;AAAU,QAAA,QAAQ,EAAES,gBAApB;AAAsC,QAAA,KAAK,EAAEpB,KAAK,CAACC,KAAN,CAAYa,UAAzD;AAAqE,QAAA,GAAG,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;KAAMlB,O;AAuCN,eAAeA,OAAf","sourcesContent":["import classes from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport {addNewMessageActionCreator, updateNewMessageActionCreator} from '../../redux/dialogReducer'\r\n\r\nconst Dialogs = (props) => {\r\n    debugger;\r\n\r\n    let state = props.state.getState().dialogPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} imgSrc={dialog.imgSrc}/> )\r\n    let messagesElements = state.messagesData.map(message =><Message message={message.message}/>)\r\n    let newMessage = state.newMessage;\r\n\r\n    let messageText = React.createRef();   \r\n\r\n    let sendMessage = () => {\r\n        //debugger;\r\n        props.store.dispatch(addNewMessageActionCreator());\r\n    }\r\n\r\n    let onTextAreaChange = () => {\r\n        let text = messageText.current.value;\r\n        props.store.dispatch(updateNewMessageActionCreator(text));\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div>\r\n                <textarea onChange={onTextAreaChange} value={props.state.newMessage} ref={messageText}></textarea>\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}