{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Irina\\\\Desktop\\\\social_network\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport classes from './Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport { addNewMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogReducer';\nimport Dialogs from './Dialogs';\nimport StoreContext from '../../StoreContext';\n\nconst DialogsContainer = props => {\n  //debugger;\n  // let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} imgSrc={dialog.imgSrc}/> )\n  // let messagesElements = state.messagesData.map(message =><Message message={message.message}/>)\n  //let newMessage = state.newMessage;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: [\" \", store => {\n      let state = store.getState().dialogsPage;\n\n      let onSendMessage = () => {\n        //debugger;\n        store.dispatch(addNewMessageActionCreator());\n      };\n\n      let onTextAreaChange = text => {\n        props.store.dispatch(updateNewMessageActionCreator(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Dialogs, {\n        updateNewMessage: onTextAreaChange,\n        addNewMessage: onSendMessage,\n        dialogsPage: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this);\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Users/Irina/Desktop/social_network/src/components/Dialogs/DialogsContainer.jsx"],"names":["classes","NavLink","DialogItem","Message","React","addNewMessageActionCreator","updateNewMessageActionCreator","Dialogs","StoreContext","DialogsContainer","props","store","state","getState","dialogsPage","onSendMessage","dispatch","onTextAreaChange","text"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,EAAoCC,6BAApC,QAAwE,2BAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC;AAID;AACA;AACC;AAGA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAA,oBACKC,KAAD,IAAW;AACP,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,GAAiBC,WAA7B;;AAEA,UAAIC,aAAa,GAAG,MAAM;AACtB;AACAJ,QAAAA,KAAK,CAACK,QAAN,CAAeX,0BAA0B,EAAzC;AACH,OAHD;;AAKA,UAAIY,gBAAgB,GAAIC,IAAD,IAAU;AAC7BR,QAAAA,KAAK,CAACC,KAAN,CAAYK,QAAZ,CAAqBV,6BAA6B,CAACY,IAAD,CAAlD;AACH,OAFD;;AAIA,0BAAO,QAAC,OAAD;AAAS,QAAA,gBAAgB,EAAED,gBAA3B;AAA6C,QAAA,aAAa,EAAEF,aAA5D;AAA2E,QAAA,WAAW,EAAEH;AAAxF;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAdL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;KAAMH,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["import classes from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport {addNewMessageActionCreator, updateNewMessageActionCreator} from '../../redux/dialogReducer'\r\nimport Dialogs from './Dialogs';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nconst DialogsContainer = (props) => {\r\n    //debugger;\r\n\r\n    \r\n\r\n   // let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} imgSrc={dialog.imgSrc}/> )\r\n   // let messagesElements = state.messagesData.map(message =><Message message={message.message}/>)\r\n    //let newMessage = state.newMessage;\r\n \r\n\r\n    return (\r\n        <StoreContext.Consumer> {\r\n            (store) => {\r\n                let state = store.getState().dialogsPage;\r\n\r\n                let onSendMessage = () => {\r\n                    //debugger;\r\n                    store.dispatch(addNewMessageActionCreator());\r\n                }\r\n            \r\n                let onTextAreaChange = (text) => {\r\n                    props.store.dispatch(updateNewMessageActionCreator(text));\r\n                }\r\n\r\n                return <Dialogs updateNewMessage={onTextAreaChange} addNewMessage={onSendMessage} dialogsPage={state}/>\r\n            }\r\n        }\r\n       </StoreContext.Consumer>\r\n       )\r\n}\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}