{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Irina\\\\Desktop\\\\social_network\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport classes from './Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport { addNewMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogReducer';\nimport Dialogs from './Dialogs';\n\nconst DialogsContainer = props => {\n  debugger;\n  let state = props.state.getState().dialogPage;\n  let dialogsElements = state.dialogsData.map(dialog => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: dialog.name,\n    id: dialog.id,\n    imgSrc: dialog.imgSrc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 59\n  }, this));\n  let messagesElements = state.messagesData.map(message => /*#__PURE__*/_jsxDEV(Message, {\n    message: message.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 61\n  }, this));\n  let newMessage = state.newMessage;\n  let messageText = /*#__PURE__*/React.createRef();\n\n  let onSendMessage = () => {\n    //debugger;\n    props.store.dispatch(addNewMessageActionCreator());\n  };\n\n  let onTextAreaChange = text => {\n    props.store.dispatch(updateNewMessageActionCreator(text));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    onTextAreaChange: onTextAreaChange,\n    addNewMessage: onSendMessage,\n    dialogsPage: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Users/Irina/Desktop/social_network/src/components/Dialogs/DialogsContainer.jsx"],"names":["classes","NavLink","DialogItem","Message","React","addNewMessageActionCreator","updateNewMessageActionCreator","Dialogs","DialogsContainer","props","state","getState","dialogPage","dialogsElements","dialogsData","map","dialog","name","id","imgSrc","messagesElements","messagesData","message","newMessage","messageText","createRef","onSendMessage","store","dispatch","onTextAreaChange","text"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,EAAoCC,6BAApC,QAAwE,2BAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC;AAEA,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,QAAZ,GAAuBC,UAAnC;AAEA,MAAIC,eAAe,GAAGH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsBC,MAAM,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE,EAA1C;AAA8C,IAAA,MAAM,EAAEF,MAAM,CAACG;AAA7D;AAAA;AAAA;AAAA;AAAA,UAAhC,CAAtB;AACA,MAAIC,gBAAgB,GAAGV,KAAK,CAACW,YAAN,CAAmBN,GAAnB,CAAuBO,OAAO,iBAAG,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAO,CAACA;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAjC,CAAvB;AACA,MAAIC,UAAU,GAAGb,KAAK,CAACa,UAAvB;AAEA,MAAIC,WAAW,gBAAGpB,KAAK,CAACqB,SAAN,EAAlB;;AAEA,MAAIC,aAAa,GAAG,MAAM;AACtB;AACAjB,IAAAA,KAAK,CAACkB,KAAN,CAAYC,QAAZ,CAAqBvB,0BAA0B,EAA/C;AACH,GAHD;;AAKA,MAAIwB,gBAAgB,GAAIC,IAAD,IAAU;AAC7BrB,IAAAA,KAAK,CAACkB,KAAN,CAAYC,QAAZ,CAAqBtB,6BAA6B,CAACwB,IAAD,CAAlD;AACH,GAFD;;AAMA,sBACG,QAAC,OAAD;AAAS,IAAA,gBAAgB,EAAED,gBAA3B;AAA6C,IAAA,aAAa,EAAEH,aAA5D;AAA2E,IAAA,WAAW,EAAEhB;AAAxF;AAAA;AAAA;AAAA;AAAA,UADH;AAGH,CAzBD;;KAAMF,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import classes from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport {addNewMessageActionCreator, updateNewMessageActionCreator} from '../../redux/dialogReducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nconst DialogsContainer = (props) => {\r\n    debugger;\r\n\r\n    let state = props.state.getState().dialogPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} imgSrc={dialog.imgSrc}/> )\r\n    let messagesElements = state.messagesData.map(message =><Message message={message.message}/>)\r\n    let newMessage = state.newMessage;\r\n\r\n    let messageText = React.createRef();   \r\n\r\n    let onSendMessage = () => {\r\n        //debugger;\r\n        props.store.dispatch(addNewMessageActionCreator());\r\n    }\r\n\r\n    let onTextAreaChange = (text) => {\r\n        props.store.dispatch(updateNewMessageActionCreator(text));\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n       <Dialogs onTextAreaChange={onTextAreaChange} addNewMessage={onSendMessage} dialogsPage={state}/>\r\n    )\r\n}\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}